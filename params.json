{
  "name": "Ansnet",
  "tagline": "ansible python php",
  "body": "# ansnet\r\n\r\nThe intention of AnsNet is to create a user friendly orchestration system, for network environment builds.\r\nIt is based on Ansible, NAPALM and Netmiko libraries in order to provide multivendor configuration push.\r\nThe Ansible roles are divided according Vendors and Function\r\n\r\nExample Role Splits:\r\n- ansible\r\n - cisco\r\n   - roles\r\n     - ios\r\n        - catalyst_basic_switch_builds\r\n        - catalyst_switch_trunks\r\n        - catalyst_switch_lacp\r\n        - catalyst_spine_leaf_builds\r\n        - ios_based_tacacs\r\n        - ios_bgp_ebgp\r\n        - ios_bgp_ibgp\r\n      - nxos\r\n        - nexus_vpc_peers\r\n        - nexus_downstream_vpcs\r\n - juniper\r\n   - roles\r\n     - junos\r\n        - junos_switch_ports\r\n        - junos_bgp_peerings\r\n - arista\r\n   - roles\r\n     - eos\r\n        - eos_switch_ports\r\n        - eos_bgp_peerings\r\n - freeform\r\n   - roles\r\n     - anyos\r\n        - freeform_builds\r\n\r\n- Web Browser Interface\r\n - ansnet\r\n   - vendor_pages_per_role\r\n     - html_forms-user_input\r\n       - main.yml_builder_per_user_input\r\n        - build_called_by_html\r\n        - push_called_by_html\r\n    \r\nFor enhanced user experience a web browser interface is part of the system.\r\n\r\nThe root of all the roles listed was the \"Freeform\" role, due to its ability to push to any device as long as it is supported by Netmiko or NAPALM.\r\n\r\nAnsNet was built in FreeBSD 11.\r\n\r\nI've included a simple Update Playbook to show a the cross integration within Ansible. It shows that the same system can be used not just for the purpose of Network Builds but also create tasks to administer the ansnet host system. The playbook is the only one in AnsNet that runs dependent in the host file (included in the repository).\r\nFrom FreeBSD Playbook\r\n---\r\n- hosts: freebsd << Calls freebsd group in the hosts file. Normally located in /usr/local/ets/ansible/hosts\r\n\r\nThe playbook can be ran on demand via command (ansible-playbook -vvv /usr/local/share/ansible/freebsd) a shell script or scheduled CRON.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}